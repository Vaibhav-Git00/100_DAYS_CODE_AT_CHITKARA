------------>>_________________________________________________________________<<-----------

--> In java all the variables are store in memory.And it has represent as a blocks.
--> The blocks are present in the memory are the unique address.
--> IN Java , there are two types of data types--> which is primitive or non-primitive.
--> Java are typed languages.for ex- before you declare a variables use types.
--> in java ,points value by default taking double  ,thats why i am using (f) which is type conversion.
--> in generally byte and short are very less for use.
--> comments are use only for user can see not working that things.
--> Identifier rule says,identifiers can start with any alphabet or underscore (“_”) or dollar (“$”).According to the rule the given variable name is a valid identifir.

__________TYPE CONVERSION________________
--> destination is greater than source value
--> double > long > float > int > short > byte 

___________TYPE CASTING____________________
--> ALways remember one thing (jab bhi bade data types ko chote me dalna ho ) then we use type casting
--> we know the data will be loss ,but we forcefully converted to that types.
--> generally we call narrowing and explicit conversion.
--> In java ,if we talk about char to number conversion ,then give conversion without type casting.

________________TYPE PROMOTION____________________
--> IN short we say 2 rule always in your mind:
---> first: suppose apke pass chote chote data types hai --short , byte , char these all are converted into integer, in java.
-->second : suppose apke pass data types hai -- double , llong, float these all are converted into big datatypes between them which is double.
--> this this will be use only when the expression present 
--> by default java changes these two things automatically.

__________________OPERATORS__________________________
--> Arithmetic Operators: Addition (+), Subtraction(-), Multiplication(*), Division(/), Modulus(%)
--> Unary Operators: Unary Plus(+), Unary Minus(-), Increment(++), Decrement(--), Logical Complement(!)
    Post Increment: (a++)--> Return value of a and then increment it
    Pre Increment: (a--)--> Increment value of a and then return its new value.
--> Relational Operators: Is Equal to(==), Not Equal to(!=), Greater than(>), Less than(<), Greater than equal to     (>=), Less than equal to(<=)
--> Logical Operators: Logical And(&&), Logical Or(||), Logical Not(!)

________________if-else______________________________
If statement: if(condition){//code}
If-else statement: if(condition){//code}else{//code}
If-else if-else statement: if(condition){//code}else if(condition){//code}else{//code}
Nested if-else statement: if-else statements inside if-else statement
Conditional Operators: Logical And(&&), Logical Or(||), 
Ternary:---> variable = condition ? statement 1: statement 2;
Switch statement: switch(expression){case x: //code break; case y: //code break; default: //code}
--> Always remember one thing in switch case (jo variable ki value hoti hai ,woh har case se compare hoti hai)